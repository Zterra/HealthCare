// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    repositories {
        maven {
            url 'https://maven.aliyun.com/repository/google'
        }
        maven {
            url 'https://maven.aliyun.com/repository/public'
        }
        maven {
            url 'https://maven.aliyun.com/repository/jcenter'
        }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.5.1'


        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}
plugins {
    id 'com.android.application' version '7.2.1' apply false
    id 'com.android.library' version '7.2.1' apply false
}

allprojects {
    repositories {
        maven {
            url 'https://maven.aliyun.com/repository/google'
        }
        maven {
            url 'https://maven.aliyun.com/repository/public'
        }
        maven {
            url 'https://maven.aliyun.com/repository/jcenter'
        }
    }
}

allprojects{
    repositories{
//        google()
//        mavenCentral()
//        maven { url "https://maven.google.com" }
//        jcenter()
//        def githubProperties = new Properties()
//        githubProperties.load(new FileInputStream(rootProject.file("github.properties")))
//        repositories {
//            maven {
//                name = "GitHubPackages"
//
//                url = uri("https://maven.pkg.github.com/Cuberto/liquid-swipe-android")
//                credentials {
//                    /** Create github.properties in root project folder file with
//                     ** gpr.usr=GITHUB_USER_ID & gpr.key=PERSONAL_ACCESS_TOKEN
//                     ** Or set env variable GPR_USER & GPR_API_KEY if not adding a properties file**/
//                    username = githubProperties['gpr.usr'] ?: System.getenv("GPR_USER")
//                    password = githubProperties['gpr.key'] ?: System.getenv("GPR_API_KEY")
//                }
//            }
//        }

    }
}
task clean(type: Delete) {
    delete rootProject.buildDir
}